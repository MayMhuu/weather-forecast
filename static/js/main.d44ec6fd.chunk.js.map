{"version":3,"sources":["css/variable.js","components/TextBox/TextBoxCom.js","components/Button/ButtonCom.js","components/Label/LabelCom.js","components/Image/Image.js","views/WeatherInformation.js","actions/types.js","service/http-common.js","service/WeatherService.js","actions/forecast.js","assets/images/Artboard1.png","views/WeatherForecast.js","App.js","reportWebVitals.js","reducers/forecastReducer.js","reducers/rootReducer.js","reducers/index.js","index.js"],"names":["variable","StyleInput","styled","Input","TextBoxCom","placeholder","inputRef","value","onChange","ref","StyleButton","SemanticButton","ButtonCom","description","searchWeather","size","onClick","LabelCom","className","children","ImageCom","name","Image","src","StyledHeader","StyledLabel","Div","div","StyledDiv","WeatherInformation","data","currentWeather","fiveDaysWeather","weather","icon","wind","deg","Icon","Divider","horizontal","Grid","verticalAlign","map","index","Row","style","paddingBottom","Column","width","main","textAlign","stackable","padding","columns","humidity","visibility","feels_like","temp","list","SUCCESS_FORECASTDATA","FAILED_FORECASTDATA","LOADING","axios","create","baseURL","process","headers","getData","http","get","getForecastData","dispatch","a","type","payload","res","allWeather","status","lat","coord","lon","resDays","Object","assign","StyledSegment","Segment","StyledDimmer","Dimmer","StyledContainer","bgImage","StyledError","WeatherForecast","useState","setName","focusCity","useRef","useDispatch","forecastData","useSelector","state","forecast","useEffect","centered","e","target","error","minHeight","dataList","loading","height","position","top","left","background","zIndex","maxWidth","display","active","Loader","content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","forecastReducer","action","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d44ec6fd.chunk.js","sourcesContent":["export const variable = {\r\n  PRIMARY_COLOR: \"#00507B\",\r\n  PRIMARY_DARK: \"#000000\",\r\n  PRIMARY_WHITE: \"#FFFFFF\",\r\n  PRIMARY_MEDIUM: \"#D9D9D9\",\r\n  ERROR_COLOR:\"#fc1703\",\r\n  FONTSIZE_5: \"20px\",\r\n  FONTSIZE_30: \"30px\",\r\n  RADIUS_5: \"20px\",\r\n  HEIGHT_PRIMARY: \"50px\",\r\n  WIDTH_PRIMARY: \"100%\",\r\n  WIDTH_SECOND:\"200px\",\r\n  IMAGE_HEADER:\"200px\"\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { variable } from \"../../css/variable.js\";\r\n\r\nconst StyleInput = styled(Input)`\r\n  border: 2px solid transparent;\r\n  font-size: ${variable.FONTSIZE_5};\r\n  border-radius: ${variable.RADIUS_5};\r\n  height:${variable.HEIGHT_PRIMARY};\r\n  width:${variable.WIDTH_PRIMARY};\r\n  \r\n`;\r\n\r\nconst TextBoxCom = ({ placeholder,inputRef,value,onChange }) => {\r\n  return (\r\n    <StyleInput\r\n      ref={inputRef}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextBoxCom;\r\n","import React from \"react\";\r\nimport { Button as SemanticButton } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { variable } from \"../../css/variable.js\";\r\n\r\nconst StyleButton = styled(SemanticButton)`\r\n  color: ${variable.PRIMARY_WHITE} !important;\r\n  background-color: ${variable.PRIMARY_COLOR} !important;\r\n  border-radius: ${variable.RADIUS_5}\r\n  height:${variable.HEIGHT_PRIMARY};\r\n  width:${variable.WIDTH_SECOND};\r\n`;\r\n\r\nconst ButtonCom = ({ description, searchWeather, size }) => {\r\n  return (\r\n    <StyleButton size={size} onClick={searchWeather}>\r\n      {description}\r\n    </StyleButton>\r\n  );\r\n};\r\n\r\nexport default ButtonCom;\r\n","import React from \"react\";\r\n\r\nconst LabelCom = ({ className, children }) => {\r\n  return <label className={className}>{children}</label>;\r\n};\r\n\r\nexport default LabelCom;\r\n","import React from \"react\";\r\nimport {Image} from \"semantic-ui-react\"\r\n\r\nconst ImageCom = ({ className,name }) => {\r\n  return <Image className={className} src={\"http://openweathermap.org/img/wn/\" + name + \".png\"}/>;\r\n};\r\n\r\nexport default ImageCom;\r\n","import React from \"react\";\r\nimport { Grid, Icon,Divider } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport LabelCom from \"../components/Label/LabelCom\";\r\nimport ImageCom from \"../components/Image/Image\";\r\nimport { variable } from \"../css/variable\";\r\n\r\nconst StyledHeader = styled(LabelCom)`\r\n  color: ${variable.PRIMARY_COLOR};\r\n  font-weight: bold;\r\n  font-size: ${variable.FONTSIZE_30};\r\n`;\r\n\r\nconst StyledLabel = styled(LabelCom)`\r\n  color: ${variable.PRIMARY_COLOR};\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Image = styled(ImageCom)`\r\n  display: inline-block !important;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  background-color: rgba(255, 255, 255, 0) !important;\r\n`;\r\n\r\nconst WeatherInformation = ({ data }) => {\r\n  let { currentWeather, fiveDaysWeather } = data;\r\n  return (\r\n    <StyledDiv>\r\n      <Image name={currentWeather.data.weather[0].icon + \"@2x\"} />\r\n      <br />\r\n      <Div></Div>\r\n      <StyledHeader>{currentWeather.data.wind.deg} °C</StyledHeader>\r\n      <br />\r\n      <Div></Div>\r\n      <LabelCom>\r\n        <Icon name=\"map marker alternate\" />\r\n        {currentWeather.data.name}\r\n      </LabelCom>\r\n      <br />\r\n      <Div></Div>\r\n      <Divider horizontal> <LabelCom>Current Condation</LabelCom> </Divider>\r\n      <Grid verticalAlign=\"middle\">\r\n        {currentWeather.data.weather.map((data, index) => {\r\n          return (\r\n            <Grid.Row key={index} style={{ paddingBottom: \"0rem\" }}>\r\n              <Grid.Column width={2}></Grid.Column>\r\n              <Grid.Column width={4}>\r\n                <StyledLabel>{data.main}</StyledLabel>\r\n              </Grid.Column>\r\n              <Grid.Column width={4} textAlign=\"right\">\r\n                <Image name={data.icon} />\r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                <StyledLabel> {currentWeather.data.wind.deg} ° C</StyledLabel>\r\n              </Grid.Column>\r\n              <Grid.Column width={2}></Grid.Column>\r\n            </Grid.Row>\r\n          );\r\n        })}\r\n      </Grid>\r\n      <br />\r\n      <Div></Div>\r\n      <Divider horizontal> <LabelCom>Additional Information</LabelCom> </Divider>\r\n      <br />\r\n      <Div></Div>\r\n\r\n      <Grid stackable>\r\n        <Grid.Row style={{ padding: \"0rem\" }} columns={2}>\r\n          <Grid.Column>\r\n            <StyledLabel>\r\n            Humidity : {currentWeather.data.main.humidity} %\r\n            </StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <StyledLabel>\r\n              Visibility : {currentWeather.data.visibility} mb\r\n            </StyledLabel>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row style={{ padding: \"0rem\" }} columns={2}>\r\n          <Grid.Column>\r\n            <StyledLabel>\r\n              Feels like : {currentWeather.data.main.feels_like}\r\n            </StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <StyledLabel>\r\n              {\" \"}\r\n              <StyledLabel>\r\n                Temperature : {currentWeather.data.main.temp}\r\n              </StyledLabel>\r\n            </StyledLabel>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <br />\r\n      <Div></Div>\r\n      \r\n      <Divider horizontal> <LabelCom>5 day Weather Forecast</LabelCom> </Divider>\r\n      <br />\r\n      <Div></Div>\r\n      <Grid verticalAlign=\"middle\">\r\n        <Grid.Row style={{ padding: \"0rem\" }}>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>MON</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={4} textAlign=\"right\">\r\n            <Image name={fiveDaysWeather.data.list[0].weather[0].icon} />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>{fiveDaysWeather.data.list[0].wind.deg} °</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={2}></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row style={{ padding: \"0rem\" }}>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>TUE</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={4} textAlign=\"right\">\r\n            <Image name={fiveDaysWeather.data.list[1].weather[0].icon} />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>{fiveDaysWeather.data.list[1].wind.deg} °</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={2}></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row style={{ padding: \"0rem\" }}>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>WED</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={4} textAlign=\"right\">\r\n            <Image name={fiveDaysWeather.data.list[2].weather[0].icon} />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>{fiveDaysWeather.data.list[2].wind.deg} °</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={2}></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row style={{ padding: \"0rem\" }}>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>THURS</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={4} textAlign=\"right\">\r\n            <Image name={fiveDaysWeather.data.list[3].weather[0].icon} />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>{fiveDaysWeather.data.list[3].wind.deg} °</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={2}></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row style={{ padding: \"0rem\" }}>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>FRI</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={4} textAlign=\"right\">\r\n            <Image name={fiveDaysWeather.data.list[4].weather[0].icon} />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <StyledLabel>{fiveDaysWeather.data.list[4].wind.deg} °</StyledLabel>\r\n          </Grid.Column>\r\n          <Grid.Column width={2}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default WeatherInformation;\r\n","export const SUCCESS_FORECASTDATA = \"SUCCESS_RORECASTDATA\";\r\nexport const FAILED_FORECASTDATA = \"FAILED_FORECASTDATA\";\r\nexport const LOADING = \"LOADING\";","import axios from \"axios\";\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_API_SERVER,\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"./http-common\";\r\n\r\nexport const getData =(name)=> {\r\n    return http.get(`weather?q=${name}&APPID=${process.env.REACT_APP_API_KEY}`);\r\n}\r\n\r\nexport const get5DaysData =(lat,lon)=> {\r\n    return http.get(`forecast?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_API_KEY}`);\r\n}","import { SUCCESS_FORECASTDATA, FAILED_FORECASTDATA, LOADING } from \"./types\";\r\nimport { getData, get5DaysData } from \"../service/WeatherService\";\r\n\r\nexport const getForecastData = (name) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING,\r\n      payload: true,\r\n    });\r\n    const res = await getData(name);\r\n    let allWeather = {};\r\n    if (res.status === 200) {\r\n      let data = res.data;\r\n      const resDays = await get5DaysData(data.coord.lat, data.coord.lon);\r\n      Object.assign(allWeather, {\r\n        currentWeather: res,\r\n        fiveDaysWeather: resDays,\r\n      });\r\n      dispatch({\r\n        type: SUCCESS_FORECASTDATA,\r\n        payload: allWeather,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: FAILED_FORECASTDATA,\r\n      payload: \"City not found\",\r\n    });\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Artboard1.59fa84d0.png\";","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Grid, Segment, Dimmer, Loader } from \"semantic-ui-react\";\r\nimport TextBoxCom from \"../components/TextBox/TextBoxCom\";\r\nimport ButtonCom from \"../components/Button/ButtonCom\";\r\nimport styled from \"styled-components\";\r\nimport LabelCom from \"../components/Label/LabelCom\";\r\nimport { variable } from \"../css/variable\";\r\nimport WeatherInformation from \"./WeatherInformation\";\r\nimport { getForecastData } from \"../actions/forecast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport bgImage from \"../assets/images/Artboard1.png\"\r\n\r\nconst StyledSegment = styled(Segment)`\r\n  background-color: rgba(255, 255, 255, 0.15) !important;\r\n  margin-top:20px !important;\r\n`;\r\nconst StyledHeader = styled(LabelCom)`\r\n  color: ${variable.PRIMARY_DARK};\r\n  font-weight: bold;\r\n  font-size: ${variable.FONTSIZE_30};\r\n`;\r\nconst Div = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst StyledDimmer = styled(Dimmer)`\r\n  background-color: transparent !important;\r\n`;\r\nconst StyledContainer = styled.div`\r\n  background: url(${bgImage}) !important; \r\n  min-height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n`;\r\n\r\nconst StyledError = styled(LabelCom)`\r\n  color: ${variable.ERROR_COLOR};\r\n  font-weight: bold;\r\n  font-size: ${variable.FONTSIZE_5};\r\n`;\r\n\r\nconst WeatherForecast = () => {\r\n  const [name, setName] = useState(\"Thailand\");\r\n  const focusCity = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const forecastData = useSelector((state) => state.forecast);\r\n\r\n  useEffect(() => {\r\n    dispatch(getForecastData(name));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onSearchWeather = () => {\r\n    dispatch(getForecastData(name));\r\n  };\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <Grid stackable verticalAlign=\"middle\"  textAlign=\"center\">\r\n        <Grid.Row>\r\n          <Grid.Column width={2}></Grid.Column>\r\n          <Grid.Column width={6} centered>\r\n            <StyledDiv>\r\n              <StyledHeader>Weather Forecast</StyledHeader>\r\n              <br />\r\n              <Div></Div>\r\n              <LabelCom>Enter Location : </LabelCom>\r\n              <br />\r\n              <Div></Div>\r\n              <TextBoxCom\r\n                placeholder={\"Enter Location\"}\r\n                inputRef={focusCity}\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              <StyledError>{forecastData.error}</StyledError>\r\n              <br />\r\n              <Div></Div>\r\n              <ButtonCom\r\n                description={\"Search\"}\r\n                searchWeather={onSearchWeather}\r\n                size={\"small\"}\r\n              />\r\n            </StyledDiv>\r\n          </Grid.Column>\r\n          <Grid.Column width={7} textAlign=\"center\" style={{ minHeight: 450,textAlign:'center' }}>\r\n            {forecastData.dataList ? (\r\n              <StyledSegment>\r\n                <WeatherInformation data={forecastData.dataList} />\r\n              </StyledSegment>\r\n            ) : (\r\n             < ></> \r\n            )}\r\n          </Grid.Column>\r\n          <Grid.Column width={1}></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      {forecastData.loading && (\r\n        <div\r\n          className=\"align-items-center justify-content-center\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            background: \"rgba(0,0,0,0.8)\",\r\n            zIndex: \"999\",\r\n          }}\r\n        >\r\n          <Grid\r\n            textAlign=\"center\"\r\n            style={{ height: \"100vh\" }}\r\n            verticalAlign=\"middle\"\r\n          >\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n              <div style={{ display: forecastData.loading ? \"block\" : \"none\" }}>\r\n                <StyledDimmer active>\r\n                  <Loader content=\"Loading\" />\r\n                </StyledDimmer>\r\n              </div>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default WeatherForecast;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport WeatherForecast from \"./views/WeatherForecast\";\r\n\r\nfunction App() {\r\n  return <WeatherForecast />\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { SUCCESS_FORECASTDATA, FAILED_FORECASTDATA,LOADING } from \"../actions/types\";\r\nconst initialState = {\r\n  error: null,\r\n  dataList: null,\r\n  loading:false\r\n};\r\n\r\nfunction forecastReducer(forecast = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOADING:\r\n      return {\r\n        ...forecast,\r\n        loading:true\r\n      };\r\n    case SUCCESS_FORECASTDATA:\r\n      return {\r\n        error:null,\r\n        dataList: payload,\r\n        loading:false\r\n      };\r\n    case FAILED_FORECASTDATA:\r\n      return {\r\n        dataList:null,\r\n        error: payload,\r\n        loading:false\r\n      };\r\n\r\n    default:\r\n      return forecast;\r\n  }\r\n}\r\nexport default forecastReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport forecastReducer from \"./forecastReducer\";\r\n\r\nexport default combineReducers({\r\n    forecast: forecastReducer,\r\n});","import rootReducer from './rootReducer'\r\nimport thunk from \"redux-thunk\" \r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './reducers/index';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <App />\r\n</Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}